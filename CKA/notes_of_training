# This file records the kubernetes commands in CKA training course.

/************************************ Practice with pods ************************************/

1. Get running pods numbers
   kubectl get pods

2. Create a new pod with the nginx image
   kubectl run nginx --image=nginx      // kubectl run POD_NAME --image=POD_IMAGE_NAME
   
   kubectl run nginx --image=nginx --dry-run=client -o yaml > pod.yaml  // one can dry run to check pod details in yaml file
   kubectl apply -f pod.yaml
   
3. What is the image used to create the new pods?
   kubectl describe pod POD_NAMES | grep -i image
   
4. Which nodes are these pods placed on?
   kubectl get pods -o wide    // There is a column named 'node'
   
5. How many containers are part of the pod 'webapp'?
   kubectl get pods webapp
   
6. What is the state of container 'agentx' in the pod 'webapp'?
   kubectl describe pod webapp  // then to check state under each container
   
7. Delete pod webapp
   kubectl delete pod webapp
   
8. Change the image name for a pod
   kubectl edit pod nginx        // find the image name and edit it.


/************************************ Practice with ReplicaSets ************************************/

9. Get replicasets
   kubectl get replicasets.apps
   
controlplane ~ ✖ kubectl get replicasets.apps
NAME              DESIRED   CURRENT   READY   AGE
new-replica-set   4         4         0       36s

We can see that the DESIRED pods numbers in the replica. Replica will always make sure the DESIRED number of pods running. How many are deleted, then how many will be created automatically.

10. Get the image used to create pods in the replica.
    kubectl describe replicasets.apps RELICA_NAME
    
11. Correct replica apiVersion:
    controlplane ~ ➜  kubectl apply -f replicaset-definition-1.yaml 
error: unable to recognize "replicaset-definition-1.yaml": no matches for kind "ReplicaSet" in version "v1"

   -> apps/v1
   
12. Delete ReplicaSet
    kubectl delete replicasets.apps REPLICA_NAME
    
13. Scale (up/down) replica
    kubectl scale replicaset --replicas=5 REPLICA_SET_NAME    // up from 4 to 5
    kubectl scale replicaset --replicas=2 REPLICA_SET_NAME    // dwon from 5 to 2



/************************************ Practice with Deployment ************************************/


14. How many deployments
    kubectl get deployments.apps
    
15. Create deployment:
    Name: httpd-frontend;
Replicas: 3;
Image: httpd:2.4-alpine


    kubectl create deployment httpd-frontend --image=httpd:2.4-alpine
    
    kubectl scale deployment --replicas=3 httpd-frontend
    
    

/************************************ Practice with Namespace ************************************/

16.  How many Namespace
     kubectl get ns --no-headers | wc -l
     
17. How many pods exist in the namespace 'research'?
    kubectl get pods -n research --no-headers
    
18. Create a POD in the 'finance' namespace. (Name: redis, Image Name: redis)
    1) kubectl run redis --image=redis --dry-run=client -o yaml > pod.yaml
    2) vi pod.yaml
       apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: redis
  name: redis
  namespace: finance    #add this line 
spec:
  containers:
  - image: redis
    name: redis
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}

    3) kubectl apply -f pod.yaml
    
19. Which namespace has the 'blue' pod in it?
    kubectl get pods --all-namespaces | grep blue
    
    
